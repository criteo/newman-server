openapi: 3.0.3
info:
  title: Newman-Server
  version: '1.0'
  description: A simple API to run Postman collections, using the newman engine
paths:
  /run/json:
    post:
      operationId: runJson
      summary: Run a Postman collection and output the JSON result
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionRunInput'
            examples:
              CollectionRunInputExample:
                $ref: '#/components/examples/CollectionRunInputExample'
      responses:
        '200':
          description: >-
            The JSON reporter output. This is the "run" part of the standard
            JSON reporter bundled with newman
          content:
            application/json:
              examples:
                CollectionRunJsonOuputExample:
                  $ref: '#/components/examples/CollectionRunJsonOuputExample'
  /run/html:
    post:
      operationId: runHtml
      summary: Run a Postman collection and output the HTML result
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionRunInput'
            examples:
              CollectionRunInputExample:
                $ref: '#/components/examples/CollectionRunInputExample'
      responses:
        '200':
          description: The HTML reporter output
          content:
            text/html:
              example: HTML ouput
  /run/junit:
    post:
      operationId: runJUnit
      summary: Run a Postman collection and output the JUnit (XML) result
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionRunInput'
            examples:
              CollectionRunInputExample:
                $ref: '#/components/examples/CollectionRunInputExample'
      responses:
        '200':
          description: The JUnit/XML reporter output
          content:
            application:
              examples:
                xml:
                  value: |
                    <testsuites name="Newman" tests="1" time="0.293"> 
                      <testsuite name="Github repository self-check" id="..." timestamp="..." tests="3" failures="0" errors="0" time="0.293">
                          <testcase name="Status code is 200" time="0.293" classname="Newman"/>
                          <testcase name="The repository ful name is criteo/newman-server" time="0.293" classname="Newman"/>
                          <testcase name="The repository''s owner name is criteo" time="0.293" classname="Newman"/>
                      </testsuite>
                    </testsuites>
components:
  schemas:
    CollectionRunInput:
      type: object
      description: The Postman collection file and optional iteration data file to run
      required:
        - collectionFile
      properties:
        collectionFile:
          type: string
          format: binary
          description: the JSON Postman collection file
        iterationDataFile:
          type: string
          format: binary
          description: the JSON iteration data file.
          externalDocs:
            description: more information about the iteration data file
            url: >-
              https://learning.postman.com/docs/running-collections/working-with-data-files/
  examples:
    CollectionRunInputExample:
      value:
        collection: '{"info": {...}, ...}'
        iterationData: '[{key:"value"},{key:"value"}]'
    CollectionRunJsonOuputExample:
      value:
        stats:
          iterations:
            total: 1
            pending: 0
            failed: 0
          tests:
            total: 3
            pending: 0
            failed: 0
        timings:
          responseAverage: 849
          started: 1472134919325
          completed: 1472134922455
        executions:
          - cursor: {}
            item:
              id: 17d87a3b-fdc8-4b18-9815-950a42d87f59
              name: A simple GET request
              request:
                url: >-
                  https://postman-echo.com/get?source=newman-sample-github-collection
                method: GET
              event:
                - listen: test
                  script:
                    type: text/javascript
                    exec:
                      - >-
                        tests["response code is 200"] = (responseCode.code ===
                        200);
            request:
              url: >-
                https://postman-echo.com/get?source=newman-sample-github-collection
              method: GET
              header: []
              body: {}
              description: {}
            response:
              status: OK
              code: 200
              header: []
              body: ''
              responseTime: 1965
              responseSize: 311
            id: 17d87a3b-fdc8-4b18-9815-950a42d87f59
            assertions:
              - assertion: response code is 200
        transfers:
          responseTotal: 928
        failures: []
        error: null
servers:
  - url: /
externalDocs:
  url: https://github.com/criteo/newman-server