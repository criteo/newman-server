openapi: 3.0.3
info:
  title: Newman-Server
  version: '1.0'
  description: A simple API to run Postman collections, using the newman engine
paths:
  /run/json:
    post:
      operationId: runJson
      summary: Run a Postman collection and output the JSON result
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionRunInput'
            examples:
              CollectionRunInputExample:
                $ref: '#/components/examples/CollectionRunInputExample'
      responses:
        '200':
          description: >-
            The JSON reporter output. This is the "run" part of the standard
            JSON reporter bundled with newman
          content:
            application/json:
              examples:
                CollectionRunJsonOuputExample:
                  $ref: '#/components/examples/CollectionRunJsonOuputExample'
  /run/html:
    post:
      operationId: runHtml
      summary: Run a Postman collection and output the HTML result
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionRunInput'
            examples:
              CollectionRunInputExample:
                $ref: '#/components/examples/CollectionRunInputExample'
      responses:
        '200':
          description: The HTML reporter output
          content:
            text/html:
              example: HTML output
  /run/junit:
    post:
      operationId: runJUnit
      summary: Run a Postman collection and output the JUnit (XML) result
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionRunInput'
            examples:
              CollectionRunInputExample:
                $ref: '#/components/examples/CollectionRunInputExample'
      responses:
        '200':
          description: The JUnit/XML reporter output
          content:
            application:
              examples:
                xml:
                  value: |
                    <testsuites name="Newman" tests="1" time="0.293"> 
                      <testsuite name="Github repository self-check" id="..." timestamp="..." tests="3" failures="0" errors="0" time="0.293">
                          <testcase name="Status code is 200" time="0.293" classname="Newman"/>
                          <testcase name="The repository ful name is criteo/newman-server" time="0.293" classname="Newman"/>
                          <testcase name="The repository''s owner name is criteo" time="0.293" classname="Newman"/>
                      </testsuite>
                    </testsuites>
  /api/health:
    get:
      operationId: runHealthCheck
      summary: Run various health checks in order to make sure that the server is in an healthy state
      responses:
        '200':
          description: The server is in an healthy state
          content:
            application/json:
              examples:
                application/json:
                  value: |
                    {
                      "uptime": 2075.2633214
                    }
        '500':
          description: The server is in an unhealthy state
          content:
            application/json:
              examples:
                application/json:
                  value: |
                    {
                      "errors": [
                        {
                          "code": "ENOTEMPTY",
                          "message": "Directory not empty"
                        }
                      ]
                    }
  /convert/html:
    post:
      operationId: convertHtml
      summary: Convert newman JSON summary to HTML result
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionRunJsonOutput'
            examples:
              CollectionRunJsonOuputExample:
                $ref: '#/components/examples/CollectionRunJsonOuputExample'
      responses:
        '200':
          description: The HTML reporter output
          content:
            text/html:
              example: HTML output
        '400':
          description: The provided summary file is not of valid format
          content:
            application/json:
              examples:
                application/json:
                  value: |
                    {
                      "errors": "The summary file is not of valid format. Please use the summary generated using Newman."
                    }        
components:
  schemas:
    CollectionRunInput:
      type: object
      description: The Postman collection file and optional iteration data file to run
      required:
        - collectionFile
      properties:
        collectionFile:
          type: string
          format: binary
          description: the JSON Postman collection file
        iterationDataFile:
          type: string
          format: binary
          description: the JSON iteration data file.
          externalDocs:
            description: more information about the iteration data file
            url: >-
              https://learning.postman.com/docs/running-collections/working-with-data-files/
    CollectionRunJsonOutput:
      type: object
      description: The summary file to run.
      required:
        - summaryFile
      properties:
        summaryFile:
          type: string
          format: binary
          description: the JSON collection run summary file.
  examples:
    CollectionRunInputExample:
      value:
        collection: '{"info": {...}, ...}'
        iterationData: '[{key:"value"},{key:"value"}]'
    CollectionRunJsonOuputExample:
      url: https://github.com/criteo/newman-server/blob/main/tests/resources/summary-valid.json 
servers:
  - url: /
externalDocs:
  url: https://github.com/criteo/newman-server